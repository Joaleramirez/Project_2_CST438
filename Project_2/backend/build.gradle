plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.netflix.dgs.codegen' version '7.0.3'
	id 'org.graalvm.buildtools.native' version '0.10.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'nz.ac.waikato.cms.weka:weka-stable:3.8.6'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}




generateJava {
	schemaPaths = ["${projectDir}/src/main/resources/graphql-client"]
	packageName = 'com.example.Project_2.codegen'
	generateClient = true
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootRun') {
	mainClass = 'com.example.Project_2.Project2Application'
}
